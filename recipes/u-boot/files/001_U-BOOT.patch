--- a/arch/powerpc/lib/board.c	2013-03-07 13:47:04.177362872 +0800
+++ b/arch/powerpc/lib/board.c	2013-03-07 13:48:32.589365707 +0800
@@ -726,6 +726,7 @@
 
 	mem_malloc_init (malloc_start, TOTAL_MALLOC_LEN);
 
+#define CONFIG_SYS_NO_FLASH
 #if !defined(CONFIG_SYS_NO_FLASH)
 	puts ("FLASH: ");
 
--- a/board/freescale/p1010rdb/ddr.c	2013-03-07 13:47:03.841362862 +0800
+++ b/board/freescale/p1010rdb/ddr.c	2013-03-07 13:51:21.429371106 +0800
@@ -32,7 +32,7 @@
 DECLARE_GLOBAL_DATA_PTR;
 
 #ifndef CONFIG_DDR_RAW_TIMING
-#define CONFIG_SYS_DRAM_SIZE	1024
+#define CONFIG_SYS_DRAM_SIZE 	512
 
 fsl_ddr_cfg_regs_t ddr_cfg_regs_800 = {
 	.cs[0].bnds = CONFIG_SYS_DDR_CS0_BNDS,

--- a/drivers/mtd/spi/spansion.c	2013-03-07 13:47:05.445362914 +0800
+++ b/drivers/mtd/spi/spansion.c	2013-03-07 13:54:19.729376805 +0800
@@ -50,9 +50,11 @@
 #define SPSN_ID_S25FL032A	0x0215
 #define SPSN_ID_S25FL064A	0x0216
 #define SPSN_ID_S25FL128P	0x2018
+#define SPSN_ID_S25FL128S       0X2018
 #define SPSN_EXT_ID_S25FL128P_256KB	0x0300
 #define SPSN_EXT_ID_S25FL128P_64KB	0x0301
 #define SPSN_EXT_ID_S25FL032P		0x4d00
+#define SPSN_EXT_ID_S25FL128S           0X4d01
 
 #define SPANSION_SR_WIP		(1 << 0)	/* Write-in-Progress */
 
@@ -133,6 +135,14 @@
 		.nr_sectors = 64,
 		.name = "S25FL032P",
 	},
+        {
+                .idcode1 = SPSN_ID_S25FL128S,
+                .idcode2 = SPSN_EXT_ID_S25FL128S,
+                .page_size = 256,
+                .pages_per_sector = 256,
+                .nr_sectors = 256,
+                .name = "S25FL128S",
+        },
 };
 
 static int spansion_wait_ready(struct spi_flash *flash, unsigned long timeout)

--- a/drivers/net/tsec.c	2013-03-07 13:47:05.793362924 +0800
+++ b/drivers/net/tsec.c	2013-03-07 13:58:40.413385152 +0800
@@ -1922,6 +1922,32 @@
         }
 };
 
+struct phy_info phy_info_AR8035 = {
+               0x4dd07,
+               "AR8035",
+               4,
+               (struct phy_cmd[]) { /* config */
+                {PHY_BMCR, PHY_BMCR_RESET, NULL},
+                {PHY_BMCR, PHY_BMCR_AUTON|PHY_BMCR_RST_NEG, NULL},
+                {0xd, 0x07, NULL},
+                {0xe, 0x8016, NULL},
+                {0xd, 0x4007, NULL},
+                {0xe, 0x321a, NULL},
+                {0x1d, 0x05, NULL},
+                {0x1e, 0x3D47, NULL},
+                {miim_end,}
+        },
+        (struct phy_cmd[]) { /* startup */
+                {PHY_BMSR, miim_read, NULL},
+                {PHY_BMSR, miim_read, &mii_parse_sr},
+                {PHY_BMSR, miim_read, &mii_parse_link},
+                {miim_end,}
+        },
+        (struct phy_cmd[]) { /* shutdown */
+                {miim_end,}
+        }
+};
+
 static struct phy_info *phy_info[] = {
 	&phy_info_cis8204,
 	&phy_info_cis8201,
@@ -1945,6 +1971,7 @@
 	&phy_info_dp83865,
 	&phy_info_rtl8211b,
 	&phy_info_AR8021,
+	&phy_info_AR8035,
 	&phy_info_generic,	/* must be last; has ID 0 and 32 bit mask */
 	NULL
 };

--- a/drivers/spi/fsl_espi.c	2013-03-07 13:47:05.441362914 +0800
+++ b/drivers/spi/fsl_espi.c	2013-03-07 14:04:45.121396824 +0800
@@ -41,7 +41,7 @@
 #define ESPI_CSMODE_CI_INACTIVEHIGH	(1 << 31)
 #define ESPI_CSMODE_CP_BEGIN_EDGCLK	(1 << 30)
 #define ESPI_CSMODE_REV_MSB_FIRST	(1 << 29)
-#define ESPI_CSMODE_DIV16		(1 << 28)
+#define ESPI_CSMODE_DIV16		(0 << 28)
 #define ESPI_CSMODE_PM(x)		((x) << 24)
 #define ESPI_CSMODE_POL_ASSERTED_LOW	(1 << 20)
 #define ESPI_CSMODE_LEN(x)		((x) << 16)
@@ -77,7 +77,8 @@
 	slave->max_transfer_length = ESPI_MAX_DATA_TRANSFER_LEN;
 
 	/* Enable eSPI interface */
-	espi->mode = ESPI_MODE_RXTHR(3) | ESPI_MODE_TXTHR(4) | ESPI_MODE_EN;
+	espi->mode = ESPI_MODE_RXTHR(0x1f) | ESPI_MODE_TXTHR(0x1f) | ESPI_MODE_EN;
+	debug("espi->mode:0x%08x\n", espi->mode);
 
 	espi->event = 0xffffffff;	/* Clear all eSPI events */
 	espi->mask = 0x00000000;	/* Mask  all eSPI interrupts */
@@ -86,13 +87,14 @@
 	for (i = 0; i < ESPI_MAX_CS_NUM; i++)
 		espi->csmode[i] = ESPI_CSMODE_INIT_VAL;
 
-	espi->csmode[cs] &= ~(ESPI_CSMODE_PM(0xF) | ESPI_CSMODE_DIV16
+	espi->csmode[cs] &= ~(ESPI_CSMODE_PM(0x2) | ESPI_CSMODE_DIV16
 		| ESPI_CSMODE_CI_INACTIVEHIGH | ESPI_CSMODE_CP_BEGIN_EDGCLK
 		| ESPI_CSMODE_REV_MSB_FIRST | ESPI_CSMODE_LEN(0xF));
-
+	debug("espi->csmode[cs]:0x%08x\n", espi->csmode[cs]);
 	/* Set eSPI BRG clock source */
 	get_sys_info(&sysinfo);
 	spibrg = sysinfo.freqSystemBus / 2;
+	debug("spibrg:0x%08x, max_hz:0x%08x\n", spibrg, max_hz);
 	if ((spibrg / max_hz) > 32) {
 		espi->csmode[cs] |= ESPI_CSMODE_DIV16;
 		pm = spibrg / (max_hz * 16 * 2);
@@ -103,6 +105,7 @@
 		}
 	} else
 		pm = spibrg / (max_hz * 2);
+	debug("pm:0x%08x\n", pm);
 	if (pm)
 		pm--;
 	espi->csmode[cs] |= ESPI_CSMODE_PM(pm);
@@ -119,6 +122,7 @@
 	/* Character length in bits, between 0x3~0xf, i.e. 4bits~16bits */
 	espi->csmode[cs] |= ESPI_CSMODE_LEN(7);
 
+	debug("espi->csmode[cs]:0x%08x\n", espi->csmode[cs]);
 	return slave;
 }
 
@@ -186,7 +190,7 @@
 		}
 
 		/* Wait for eSPI transmit to get out */
-		udelay(80);
+		udelay(3);
 
 		event = espi->event;
 		if (event & ESPI_EV_RNE) {

--- a/include/configs/P1010RDB.h	2013-03-07 13:47:03.261362843 +0800
+++ b/include/configs/P1010RDB.h	2013-03-07 14:15:14.897416984 +0800
@@ -181,8 +181,8 @@
 
 /* DDR Setup */
 #define CONFIG_FSL_DDR3
-#define CONFIG_DDR_RAW_TIMING
-#define CONFIG_DDR_SPD
+#undef CONFIG_DDR_RAW_TIMING
+#undef CONFIG_DDR_SPD
 #define CONFIG_SYS_SPD_BUS_NUM		1
 #define SPD_EEPROM_ADDRESS		0x52
 
@@ -199,8 +199,8 @@
 #define CONFIG_CHIP_SELECTS_PER_CTRL	1
 
 /* DDR3 Controller Settings */
-#define CONFIG_SYS_DDR_CS0_BNDS		0x0000003f
-#define CONFIG_SYS_DDR_CS0_CONFIG	0x80014302
+#define CONFIG_SYS_DDR_CS0_BNDS		0x0000001f
+#define CONFIG_SYS_DDR_CS0_CONFIG	0x80014202
 #define CONFIG_SYS_DDR_CS0_CONFIG_2	0x00000000
 #define CONFIG_SYS_DDR_DATA_INIT	0xdeadbeef
 #define CONFIG_SYS_DDR_INIT_ADDR	0x00000000
@@ -227,15 +227,15 @@
 #define CONFIG_SYS_DDR_WRLVL_CONTROL_800	0x8655A608
 
 /* settings for DDR3 at 667MT/s */
-#define CONFIG_SYS_DDR_TIMING_3_667		0x00010000
+#define CONFIG_SYS_DDR_TIMING_3_667		0x00030000
 #define CONFIG_SYS_DDR_TIMING_0_667		0x00110004
-#define CONFIG_SYS_DDR_TIMING_1_667		0x5d59e544
-#define CONFIG_SYS_DDR_TIMING_2_667		0x0FA890CD
+#define CONFIG_SYS_DDR_TIMING_1_667		0x6f6B4644
+#define CONFIG_SYS_DDR_TIMING_2_667		0x0FA888CF
 #define CONFIG_SYS_DDR_CLK_CTRL_667		0x03000000
 #define CONFIG_SYS_DDR_MODE_1_667		0x00441210
 #define CONFIG_SYS_DDR_MODE_2_667		0x00000000
 #define CONFIG_SYS_DDR_INTERVAL_667		0x0a280000
-#define CONFIG_SYS_DDR_WRLVL_CONTROL_667	0x8675F608
+#define CONFIG_SYS_DDR_WRLVL_CONTROL_667	0x8655A608
 
 /*
  * Base addresses -- Note these are effective addresses where the
@@ -336,9 +336,9 @@
 				| CSOR_NAND_ECC_DEC_EN	/* ECC on decode */ \
 				| CSOR_NAND_ECC_MODE_4	/* 4-bit ECC */ \
 				| CSOR_NAND_RAL_2	/* RAL = 2Byes */ \
-				| CSOR_NAND_PGS_512	/* Page Size = 512b */ \
-				| CSOR_NAND_SPRZ_16	/* Spare size = 16 */ \
-				| CSOR_NAND_PB(32))	/* Pages Per Block = 32 */
+				| CSOR_NAND_PGS_2K	/* Page Size = 512b */ \
+				| CSOR_NAND_SPRZ_64	/* Spare size = 16 */ \
+				| CSOR_NAND_PB(64))	/* Pages Per Block = 32 */
 
 #define CONFIG_SYS_NAND_BASE_LIST	{ CONFIG_SYS_NAND_BASE }
 #define CONFIG_SYS_MAX_NAND_DEVICE	1
@@ -379,20 +379,20 @@
 #define CONFIG_SYS_CS1_FTIM2		CONFIG_SYS_NOR_FTIM2
 #define CONFIG_SYS_CS1_FTIM3		CONFIG_SYS_NOR_FTIM3
 #else
-#define CONFIG_SYS_CSPR0		CONFIG_SYS_NOR_CSPR
-#define CONFIG_SYS_AMASK0		CONFIG_SYS_NOR_AMASK
-#define CONFIG_SYS_CSOR0		CONFIG_SYS_NOR_CSOR
-#define CONFIG_SYS_CS0_FTIM0		CONFIG_SYS_NOR_FTIM0
-#define CONFIG_SYS_CS0_FTIM1		CONFIG_SYS_NOR_FTIM1
-#define CONFIG_SYS_CS0_FTIM2		CONFIG_SYS_NOR_FTIM2
-#define CONFIG_SYS_CS0_FTIM3		CONFIG_SYS_NOR_FTIM3
-#define CONFIG_SYS_CSPR1		CONFIG_SYS_NAND_CSPR
-#define CONFIG_SYS_AMASK1		CONFIG_SYS_NAND_AMASK
-#define CONFIG_SYS_CSOR1		CONFIG_SYS_NAND_CSOR
-#define CONFIG_SYS_CS1_FTIM0		CONFIG_SYS_NAND_FTIM0
-#define CONFIG_SYS_CS1_FTIM1		CONFIG_SYS_NAND_FTIM1
-#define CONFIG_SYS_CS1_FTIM2		CONFIG_SYS_NAND_FTIM2
-#define CONFIG_SYS_CS1_FTIM3		CONFIG_SYS_NAND_FTIM3
+#define CONFIG_SYS_CSPR1               CONFIG_SYS_NOR_CSPR
+#define CONFIG_SYS_AMASK1              CONFIG_SYS_NOR_AMASK
+#define CONFIG_SYS_CSOR1               CONFIG_SYS_NOR_CSOR
+#define CONFIG_SYS_CS1_FTIM0           CONFIG_SYS_NOR_FTIM0
+#define CONFIG_SYS_CS1_FTIM1           CONFIG_SYS_NOR_FTIM1
+#define CONFIG_SYS_CS1_FTIM2           CONFIG_SYS_NOR_FTIM2
+#define CONFIG_SYS_CS1_FTIM3           CONFIG_SYS_NOR_FTIM3
+#define CONFIG_SYS_CSPR0               CONFIG_SYS_NAND_CSPR
+#define CONFIG_SYS_AMASK0              CONFIG_SYS_NAND_AMASK
+#define CONFIG_SYS_CSOR0               CONFIG_SYS_NAND_CSOR
+#define CONFIG_SYS_CS0_FTIM0           CONFIG_SYS_NAND_FTIM0
+#define CONFIG_SYS_CS0_FTIM1           CONFIG_SYS_NAND_FTIM1
+#define CONFIG_SYS_CS0_FTIM2           CONFIG_SYS_NAND_FTIM2
+#define CONFIG_SYS_CS0_FTIM3           CONFIG_SYS_NAND_FTIM3
 #endif
 
 /* NAND boot: 8K NAND loader config */
@@ -519,8 +519,8 @@
 #define CONFIG_SPI_FLASH
 #define CONFIG_SPI_FLASH_SPANSION
 #define CONFIG_CMD_SF
-#define CONFIG_SF_DEFAULT_SPEED		10000000
-#define CONFIG_SF_DEFAULT_MODE		SPI_MODE_0
+#define CONFIG_SF_DEFAULT_SPEED		50000000
+#define CONFIG_SF_DEFAULT_MODE		SPI_MODE_3
 #endif
 
 #if defined(CONFIG_TSEC_ENET)
@@ -532,22 +532,12 @@
 #define CONFIG_MII_DEFAULT_TSEC	1	/* Allow unregistered phys */
 #define CONFIG_TSEC1	1
 #define CONFIG_TSEC1_NAME	"eTSEC1"
-#define CONFIG_TSEC2	1
-#define CONFIG_TSEC2_NAME	"eTSEC2"
-#define CONFIG_TSEC3	1
-#define CONFIG_TSEC3_NAME	"eTSEC3"
 
 #define TSEC1_PHY_ADDR		1
-#define TSEC2_PHY_ADDR		0
-#define TSEC3_PHY_ADDR		2
 
 #define TSEC1_FLAGS		(TSEC_GIGABIT | TSEC_REDUCED)
-#define TSEC2_FLAGS		(TSEC_GIGABIT | TSEC_REDUCED)
-#define TSEC3_FLAGS		(TSEC_GIGABIT | TSEC_REDUCED)
 
 #define TSEC1_PHYIDX		0
-#define TSEC2_PHYIDX		0
-#define TSEC3_PHYIDX		0
 
 #define CONFIG_ETHPRIME		"eTSEC1"
 
@@ -564,10 +554,6 @@
 #endif	/* CONFIG_TSEC_ENET */
 
 
-/* SATA */
-#define CONFIG_FSL_SATA
-#define CONFIG_LIBATA
-
 #ifdef CONFIG_FSL_SATA
 #define CONFIG_SYS_SATA_MAX_DEVICE	2
 #define CONFIG_SATA1
@@ -620,9 +605,9 @@
 #define CONFIG_ENV_IS_IN_SPI_FLASH
 #define CONFIG_ENV_SPI_BUS	0
 #define CONFIG_ENV_SPI_CS	0
-#define CONFIG_ENV_SPI_MAX_HZ	10000000
-#define CONFIG_ENV_SPI_MODE	0
-#define CONFIG_ENV_OFFSET	0x100000	/* 1MB */
+#define CONFIG_ENV_SPI_MAX_HZ	133000000
+#define CONFIG_ENV_SPI_MODE	3
+#define CONFIG_ENV_OFFSET	0x90000	
 #define CONFIG_ENV_SECT_SIZE	0x10000
 #define CONFIG_ENV_SIZE		0x2000
 #elif defined(CONFIG_NAND_U_BOOT)
@@ -719,8 +704,6 @@
 
 #if defined(CONFIG_TSEC_ENET)
 #define CONFIG_HAS_ETH0
-#define CONFIG_HAS_ETH1
-#define CONFIG_HAS_ETH2
 #endif
 
 #define CONFIG_HOSTNAME		P1010RDB


--- a/drivers/pci/fsl_pci_init.c	2013-03-07 13:47:05.445362914 +0800
+++ b/drivers/pci/fsl_pci_init.c	2013-03-07 14:18:14.073422707 +0800
@@ -337,24 +337,25 @@
 		enabled = ltssm >= PCI_LTSSM_L0;
 
 #ifdef CONFIG_FSL_PCIE_RESET
-		if (ltssm == 1) {
+		if (ltssm == 1 || ltssm > PCI_LTSSM_L0) {
 			int i;
 			debug("....PCIe link error. " "LTSSM=0x%02x.", ltssm);
 			/* assert PCIe reset */
 			setbits_be32(&pci->pdb_stat, 0x08000000);
 			(void) in_be32(&pci->pdb_stat);
-			udelay(100);
+			udelay(1000);
 			debug("  Asserting PCIe reset @%x = %x\n",
 			      &pci->pdb_stat, in_be32(&pci->pdb_stat));
 			/* clear PCIe reset */
 			clrbits_be32(&pci->pdb_stat, 0x08000000);
 			asm("sync;isync");
-			for (i=0; i<100 && ltssm < PCI_LTSSM_L0; i++) {
+			for (i=0; i<40; i++) {
 				pci_hose_read_config_word(hose, dev, PCI_LTSSM,
 							&ltssm);
 				udelay(1000);
 				debug("....PCIe link error. "
 				      "LTSSM=0x%02x.\n", ltssm);
+				if(ltssm == PCI_LTSSM_L0) break;
 			}
 			enabled = ltssm >= PCI_LTSSM_L0;
 
 
